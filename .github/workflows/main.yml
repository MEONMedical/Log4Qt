name: qmake-ubuntu

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  
jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-20.04
    
    strategy:
      matrix:
        include:
         - qt_version: qt512
           qt_ppa: qt-5.12.10
         - qt_version: qt514
           qt_ppa: qt-5.14.2
         - qt_version: qt515
           qt_ppa: qt-5.15.2
          
    - name: Add Qt repository
      shell: bash
      env:
        QT_PPA: ${{ matrix.qt_ppa }}
      run: sudo add-apt-repository --yes ppa:beineri/opt-${QT_PPA}-focal 

    - name: Update Qt repository
      shell: bash
      run: sudo apt-get update -qq
   
    - name: Install Qt repository
      shell: bash
      env:
        QT_VERSION: ${{ matrix.qt_version }}
      run: sudo apt-get -y install ${QT_VERSION}base
      
    - uses: actions/checkout@v2

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: mkdir  ${{runner.workspace}}/build

    - name: Configure QMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: qmake $GITHUB_WORKSPACE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: make

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: make check
      
    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.6
      if: always()
      with:
       github_token: ${{ secrets.GITHUB_TOKEN }}
       files: tests/**/*.xml
